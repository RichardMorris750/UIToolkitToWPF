<!--
 WARNING: This code was generated by CodeGen. Any changes that you
          make to this code will be overwritten if the code is regenerated!

 Template author:	Richard C. Morris, Synergex Professional Services Group

 Template Name:	Symphony Framework : SYMPHONY_STYLE_CLR_V3.tpl

-->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:clr="clr-namespace:System;assembly=mscorlib"
    xmlns:symphonyConverters="clr-namespace:Symphony.Conductor.Converters;assembly=SymphonyConductor"
    xmlns:symphonyTriggers="clr-namespace:Symphony.Conductor.Triggers;assembly=SymphonyConductor"
    xmlns:symphonyUI="clr-namespace:Symphony.Crescendo.Presentation;assembly=SymphonyCrescendo"
    xmlns:symphonyControls="clr-namespace:Symphony.Conductor.Controls;assembly=SymphonyConductor"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity">

    <ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/SymphonyConductor;component/Resources/Styles.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SymphonyConductor;component/Resources/Converters.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/WPFPartMaintenance;component/Resources/Supplier_Content.CodeGen.xaml"/>
     </ResourceDictionary.MergedDictionaries>


	<clr:String x:Key="Supplier_Supplier_id_heading">Supplier ID</clr:String>


	<Style x:Key="Supplier_Supplier_id_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Supplier ID"
						IsEnabled="{Binding Path=Supplier_idIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



    <Style x:Key="Supplier_Supplier_id_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
                        Name="ctlSupplier_Supplier_id"
                        Text="{Binding Path=Supplier_id, UpdateSourceTrigger=Default,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        MaxLength="20"
						Width="240"
						CharacterCasing="Upper"
                        IsEnabled="{Binding Path=Supplier_idIsEnabled}"
						IsReadOnly="{Binding Path=Supplier_idIsReadOnly}"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						            <i:Interaction.Behaviors>
						              <symphonyControls:SelectAllTextBoxBehavior></symphonyControls:SelectAllTextBoxBehavior>
						            </i:Interaction.Behaviors>
						            <TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Supplier_idIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlSupplier_Supplier_id}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background">
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	

	<clr:String x:Key="Supplier_Name_heading">Name</clr:String>


	<Style x:Key="Supplier_Name_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Name"
						IsEnabled="{Binding Path=NameIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



    <Style x:Key="Supplier_Name_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
                        Name="ctlSupplier_Name"
                        Text="{Binding Path=Name, UpdateSourceTrigger=Default,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        MaxLength="50"
						Width="600"
                        IsEnabled="{Binding Path=NameIsEnabled}"
						IsReadOnly="{Binding Path=NameIsReadOnly}"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						            <i:Interaction.Behaviors>
						              <symphonyControls:SelectAllTextBoxBehavior></symphonyControls:SelectAllTextBoxBehavior>
						            </i:Interaction.Behaviors>
						            <TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=NameIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlSupplier_Name}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background">
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	

	<clr:String x:Key="Supplier_Address_1_heading">Address</clr:String>


	<Style x:Key="Supplier_Address_1_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Address"
						IsEnabled="{Binding Path=Address_1IsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



    <Style x:Key="Supplier_Address_1_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
                        Name="ctlSupplier_Address_1"
                        Text="{Binding Path=Address_1, UpdateSourceTrigger=Default,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        MaxLength="50"
						Width="600"
                        IsEnabled="{Binding Path=Address_1IsEnabled}"
						IsReadOnly="{Binding Path=Address_1IsReadOnly}"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						            <i:Interaction.Behaviors>
						              <symphonyControls:SelectAllTextBoxBehavior></symphonyControls:SelectAllTextBoxBehavior>
						            </i:Interaction.Behaviors>
						            <TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Address_1IsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlSupplier_Address_1}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background">
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	



	<Style x:Key="Supplier_Address_2_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content=""
						IsEnabled="{Binding Path=Address_2IsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



    <Style x:Key="Supplier_Address_2_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
                        Name="ctlSupplier_Address_2"
                        Text="{Binding Path=Address_2, UpdateSourceTrigger=Default,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        MaxLength="50"
						Width="600"
                        IsEnabled="{Binding Path=Address_2IsEnabled}"
						IsReadOnly="{Binding Path=Address_2IsReadOnly}"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						            <i:Interaction.Behaviors>
						              <symphonyControls:SelectAllTextBoxBehavior></symphonyControls:SelectAllTextBoxBehavior>
						            </i:Interaction.Behaviors>
						            <TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Address_2IsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlSupplier_Address_2}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background">
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	



	<Style x:Key="Supplier_Address_3_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content=""
						IsEnabled="{Binding Path=Address_3IsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



    <Style x:Key="Supplier_Address_3_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
                        Name="ctlSupplier_Address_3"
                        Text="{Binding Path=Address_3, UpdateSourceTrigger=Default,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        MaxLength="50"
						Width="600"
                        IsEnabled="{Binding Path=Address_3IsEnabled}"
						IsReadOnly="{Binding Path=Address_3IsReadOnly}"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						            <i:Interaction.Behaviors>
						              <symphonyControls:SelectAllTextBoxBehavior></symphonyControls:SelectAllTextBoxBehavior>
						            </i:Interaction.Behaviors>
						            <TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Address_3IsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlSupplier_Address_3}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background">
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	

	<clr:String x:Key="Supplier_City_heading">City</clr:String>


	<Style x:Key="Supplier_City_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="City"
						IsEnabled="{Binding Path=CityIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



    <Style x:Key="Supplier_City_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
                        Name="ctlSupplier_City"
                        Text="{Binding Path=City, UpdateSourceTrigger=Default,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        MaxLength="30"
						Width="360"
                        IsEnabled="{Binding Path=CityIsEnabled}"
						IsReadOnly="{Binding Path=CityIsReadOnly}"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						            <i:Interaction.Behaviors>
						              <symphonyControls:SelectAllTextBoxBehavior></symphonyControls:SelectAllTextBoxBehavior>
						            </i:Interaction.Behaviors>
						            <TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=CityIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlSupplier_City}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background">
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	

	<clr:String x:Key="Supplier_Postal_code_heading">Postal/Zip code</clr:String>


	<Style x:Key="Supplier_Postal_code_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Postal/Zip code"
						IsEnabled="{Binding Path=Postal_codeIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



    <Style x:Key="Supplier_Postal_code_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
                        Name="ctlSupplier_Postal_code"
                        Text="{Binding Path=Postal_code, UpdateSourceTrigger=Default,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        MaxLength="10"
						Width="120"
						CharacterCasing="Upper"
                        IsEnabled="{Binding Path=Postal_codeIsEnabled}"
						IsReadOnly="{Binding Path=Postal_codeIsReadOnly}"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						            <i:Interaction.Behaviors>
						              <symphonyControls:SelectAllTextBoxBehavior></symphonyControls:SelectAllTextBoxBehavior>
						            </i:Interaction.Behaviors>
						            <TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Postal_codeIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlSupplier_Postal_code}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background">
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	

	<clr:String x:Key="Supplier_Web_address_heading">Web site</clr:String>


	<Style x:Key="Supplier_Web_address_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Web site"
						IsEnabled="{Binding Path=Web_addressIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



    <Style x:Key="Supplier_Web_address_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
                        Name="ctlSupplier_Web_address"
                        Text="{Binding Path=Web_address, UpdateSourceTrigger=Default,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        MaxLength="78"
						Width="600" Height="12" TextWrapping="Wrap"
                        IsEnabled="{Binding Path=Web_addressIsEnabled}"
						IsReadOnly="{Binding Path=Web_addressIsReadOnly}"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						            <i:Interaction.Behaviors>
						              <symphonyControls:SelectAllTextBoxBehavior></symphonyControls:SelectAllTextBoxBehavior>
						            </i:Interaction.Behaviors>
						            <TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Web_addressIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlSupplier_Web_address}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background">
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
</ResourceDictionary>

