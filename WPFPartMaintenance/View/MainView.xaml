<Window x:Class="WPFPartMaintenance.View.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WPFPartMaintenance.View"
             mc:Ignorable="d" Width="600" Height="300"
             d:DesignHeight="300" d:DesignWidth="600">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/WPFPartMaintenance;component/Resources/Application.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/SymphonyConductor;component/Resources/Converters.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Key="N"
		     Modifiers="Control"
		     Command="{Binding Path=Menubar.CommandDictionary.[F_NEW]}">
        </KeyBinding>
        <KeyBinding Key="F4"
		     Command="{Binding Path=Menubar.CommandDictionary.[F_EXIT]}">
        </KeyBinding>
    </Window.InputBindings>

    <!-- visual states enable us to "show" different enviroments within the UI -->
    <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="applicationStates">

            <VisualState x:Name="MainViewState">
                <Storyboard>

                    <DoubleAnimation Storyboard.TargetName="mainView" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="1" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="mainView" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="mainView" Storyboard.TargetProperty="(Panel.ZIndex)" To="1" />

                    <DoubleAnimation Storyboard.TargetName="group_IdDrill" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="group_IdDrill" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"/>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="group_IdDrill" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="supplier_IdDrill" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="supplier_IdDrill" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"/>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="supplier_IdDrill" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                </Storyboard>
            </VisualState>

            <VisualState x:Name="InputViewState">
                <Storyboard>

                    <DoubleAnimation Storyboard.TargetName="mainView" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="mainView" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"/>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="mainView" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="group_IdDrill" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="group_IdDrill" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"/>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="group_IdDrill" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="supplier_IdDrill" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="supplier_IdDrill" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"/>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="supplier_IdDrill" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="inputView" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="1" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="inputView" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="inputView" Storyboard.TargetProperty="(Panel.ZIndex)" To="1" />

                </Storyboard>
            </VisualState>

            <VisualState x:Name="Drill_Group_IdDrillState">
                <Storyboard>

                    <DoubleAnimation Storyboard.TargetName="inputView" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0.6" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="inputView" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"/>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="inputView" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="group_IdDrill" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="1" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="group_IdDrill" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="group_IdDrill" Storyboard.TargetProperty="(Panel.ZIndex)" To="1" />

                </Storyboard>
            </VisualState>

            <VisualState x:Name="Drill_Supplier_IdDrillState">
                <Storyboard>

                    <DoubleAnimation Storyboard.TargetName="inputView" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0.6" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="inputView" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"/>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="inputView" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="supplier_IdDrill" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="1" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="supplier_IdDrill" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="supplier_IdDrill" Storyboard.TargetProperty="(Panel.ZIndex)" To="1" />

                </Storyboard>
            </VisualState>



        </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>

    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
        </Grid.RowDefinitions>

        <!-- this is the menu bar -->
        <Menu Grid.Row="0" IsTabStop="False">
            <MenuItem Header="_File">
                <MenuItem Header="_New" Command="{Binding Path=Commands.CommandDictionary[F_NEW]}" 
                          InputGestureText="Ctrl+N">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="pack://application:,,,/WPFPartMaintenance;component/Images/New.png"
                               Style="{StaticResource EnableDisableImageStyle}"></Image>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator></Separator>
                <MenuItem Header="_Exit" Command="{Binding Path=Commands.CommandDictionary[F_EXIT]}"
                          InputGestureText="F4">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="pack://application:,,,/WPFPartMaintenance;component/Images/Exit.png" 
                               Style="{StaticResource EnableDisableImageStyle}"></Image>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>

            <MenuItem Header="Options">
                <MenuItem Header="_Save" Command="{Binding Path=Commands.CommandDictionary[B_SAVE]}">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16">
                            <Image.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuItem}}, Path=IsEnabled}" Value="true">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/WPFPartMaintenance;component/Images/Save.png" ></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuItem}}, Path=IsEnabled}" Value="false">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/WPFPartMaintenance;component/Images/Disabled/Save.png" ></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Cancel" Command="{Binding Path=Commands.CommandDictionary[B_CANCEL]}">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16">
                            <Image.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuItem}}, Path=IsEnabled}" Value="true">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/WPFPartMaintenance;component/Images/Back.png" ></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuItem}}, Path=IsEnabled}" Value="false">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/WPFPartMaintenance;component/Images/Disabled/Back.png" ></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Delete" Command="{Binding Path=Commands.CommandDictionary[B_DELETE]}">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16">
                            <Image.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuItem}}, Path=IsEnabled}" Value="true">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/WPFPartMaintenance;component/Images/Delete.png" ></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuItem}}, Path=IsEnabled}" Value="false">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/WPFPartMaintenance;component/Images/Disabled/Delete.png" ></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>

        <!-- toolbar -->
        <ToolBar Grid.Row="1" HorizontalAlignment="Stretch" IsTabStop="False">
            <ToolBarPanel Orientation="Horizontal">
                <Button ToolTip="Save" Command="{Binding Path=Commands.CommandDictionary[B_SAVE]}" Style="{StaticResource TransperentButtonStyle}"
                        Margin="2,0,2,0">
                    <Button.Content>
                        <Image Width="28" Height="28">
                            <Image.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="true">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/WPFPartMaintenance;component/Images/Save.png" ></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="false">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/WPFPartMaintenance;component/Images/Disabled/Save.png" ></Setter>
                                        </DataTrigger>
                                        <Trigger Property="Image.IsMouseOver" Value="True">
                                            <Setter Property="Image.RenderTransform">
                                                <Setter.Value>
                                                    <ScaleTransform ScaleX="1.1" ScaleY="1.1" CenterX="10" CenterY="10"/>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Button.Content>
                </Button>
                <Button ToolTip="Cancel" Command="{Binding Path=Commands.CommandDictionary[B_CANCEL]}" Style="{StaticResource TransperentButtonStyle}"
                        Margin="2,0,2,0">
                    <Button.Content>
                        <Image Width="28" Height="28">
                            <Image.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="true">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/WPFPartMaintenance;component/Images/Back.png" ></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="false">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/WPFPartMaintenance;component/Images/Disabled/Back.png" ></Setter>
                                        </DataTrigger>
                                        <Trigger Property="Image.IsMouseOver" Value="True">
                                            <Setter Property="Image.RenderTransform">
                                                <Setter.Value>
                                                    <ScaleTransform ScaleX="1.1" ScaleY="1.1" CenterX="10" CenterY="10"/>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Button.Content>
                </Button>
                <Button ToolTip="Delete" Command="{Binding Path=Commands.CommandDictionary[B_DELETE]}" Style="{StaticResource TransperentButtonStyle}"
                        Margin="2,0,2,0">
                    <Button.Content>
                        <Image Width="28" Height="28">
                            <Image.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="true">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/WPFPartMaintenance;component/Images/Delete.png" ></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="false">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/WPFPartMaintenance;component/Images/Disabled/Delete.png" ></Setter>
                                        </DataTrigger>
                                        <Trigger Property="Image.IsMouseOver" Value="True">
                                            <Setter Property="Image.RenderTransform">
                                                <Setter.Value>
                                                    <ScaleTransform ScaleX="1.1" ScaleY="1.1" CenterX="10" CenterY="10"/>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Button.Content>
                </Button>
            </ToolBarPanel>
        </ToolBar>

        <!-- main application view -->
        <Border Grid.Row="2" Name="mainView" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0">

            <local:PartList HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></local:PartList>

        </Border>

        <!-- input view state -->
        <Border Grid.Row="2" Name="inputView" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0">

            <local:PartInput HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></local:PartInput>

        </Border>

        <!-- product lookup view -->
        <Border Grid.Row="2" Name="group_IdDrill" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0">

            <local:GroupList HorizontalAlignment="Center" VerticalAlignment="Center" 
                             Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight, Converter={StaticResource calculatedDouble}, ConverterParameter=-50}"
                             MaxHeight="200"
                             Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth, Converter={StaticResource calculatedDouble}, ConverterParameter=-50}"
                             MaxWidth="600">
            </local:GroupList>
        </Border>

        <!-- supplier lookup view -->
        <Border Grid.Row="2" Name="supplier_IdDrill" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0">

            <local:SupplierList HorizontalAlignment="Center" VerticalAlignment="Center" 
                             Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight, Converter={StaticResource calculatedDouble}, ConverterParameter=-50}"
                             MaxHeight="300"
                             Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth, Converter={StaticResource calculatedDouble}, ConverterParameter=-50}"
                             MaxWidth="600">
            </local:SupplierList>

        </Border>

        <StatusBar Grid.Row="3">
            <StatusBarItem>
                <TextBlock Text="{Binding Path=StatusBarText}"></TextBlock>
            </StatusBarItem>
        </StatusBar>

    </Grid>
</Window>
